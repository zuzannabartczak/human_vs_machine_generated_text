demo()
# END: eda_visualizations
# Load the learning curve data
learning_curve <- read.csv("learning_curve.csv")
# END: eda_visualizations
# Load the learning curve data
learning_curve <- read.csv("learning_curve.csv")
library(ggplot2)
taskAmono <- read.csv("subtaskA_dev_monolingual.csv", header = TRUE)
taskAmulti <- read.csv("subtaskA_dev_multilingual.csv", header = TRUE)
taskB <- read.csv("subtaskB_dev.csv", header = TRUE)
taskC <- read.csv("subtaskC_train.csv", header = TRUE)
# Distribution of human vs. machine-generated texts
ggplot(taskAmono, aes(x = label)) +
geom_bar() +
ggtitle("Distribution of Human vs. Machine-Generated Texts in Monolingual Dataset")
ggplot(taskAmulti, aes(x = label)) +
geom_bar() +
ggtitle("Distribution of Human vs. Machine-Generated Texts in Multilingual Dataset")
# Distribution across different languages and domains
ggplot(taskB, aes(x = model, fill = label)) +
geom_bar(position = "dodge") +
ggtitle("Distribution of Human vs. Machine-Generated Texts Across Languages in Subtask B")
library(ggplot2)
taskAmono <- read.csv("data_csv/subtaskA_dev_monolingual.csv", header = TRUE)
library(ggplot2)
taskAmono <- read.csv("data_csv/subtaskA_dev_monolingual.csv", header = TRUE)
library(ggplot2)
library(dplyr)
library(nortest)
library(jsonlite)
library(tidyverse)
library(pROC)
sgd_report_test <- read.csv("SGD_outputs/classification_report.csv", header = TRUE)
rnn_report_test <- read.csv("RNN_outputs/classification_report.csv", header = TRUE)
rownames(sgd_report_test) <- c("0", "1", "Accuracy", "Macro Avg", "Weighted Avg")
rownames(rnn_report_test) <- c("0", "1", "Accuracy", "Macro Avg", "Weighted Avg")
setwd("~/language_technology/statistics/project/human_vs_machine_generated_text")
sgd_report_test <- read.csv("SGD_outputs/classification_report.csv", header = TRUE)
rnn_report_test <- read.csv("RNN_outputs/classification_report.csv", header = TRUE)
rownames(sgd_report_test) <- c("0", "1", "Accuracy", "Macro Avg", "Weighted Avg")
rownames(rnn_report_test) <- c("0", "1", "Accuracy", "Macro Avg", "Weighted Avg")
sgd_report_dev <- read.csv("SGD_outputs/classification_report2.csv", header = TRUE)
rnn_report_dev <- read.csv("RNN_outputs/classification_report2.csv", header = TRUE)
rownames(sgd_report_dev) <- c("0", "1", "Accuracy", "Macro Avg", "Weighted Avg")
rownames(rnn_report_dev) <- c("0", "1", "Accuracy", "Macro Avg", "Weighted Avg")
rnn_report_test$vartag <- row.names(rnn_report_test)
rnn_long_test <- melt(rnn_report_test, "vartag")
library(ggplot2)
library(dplyr)
library(nortest)
library(jsonlite)
library(tidyverse)
library(pROC)
library(reshape2)
rnn_report_test$vartag <- row.names(rnn_report_test)
rnn_long_test <- melt(rnn_report_test, "vartag")
rnn_long_test <- rnn_long_test %>%
filter(!(variable == "support" | vartag %in% c("Accuracy", "Macro Avg", "Weighted Avg")))
sgd_report_test$vartag <- row.names(sgd_report_test)
sgd_long_test <- melt(sgd_report_test, "vartag")
sgd_long_test <- sgd_long_test %>%
filter(!(variable == "support" | vartag %in% c("Accuracy", "Macro Avg", "Weighted Avg")))
ggplot(sgd_long_test, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "SGD_test - Precision, Recall, and F1-Score for Classes 0 and 1")
ggplot(rnn_long_test, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "RNN_test - Precision, Recall, and F1-Score for Classes 0 and 1")
rnn_report_dev$vartag <- row.names(rnn_report_dev)
rnn_long_dev <- melt(rnn_report_dev, "vartag")
rnn_long_dev <- rnn_long_dev %>%
filter(!(variable == "support" | vartag %in% c("Accuracy", "Macro Avg", "Weighted Avg")))
sgd_report_dev$vartag <- row.names(sgd_report_dev)
sgd_long_dev <- melt(sgd_report_dev, "vartag")
sgd_long_dev <- sgd_long_dev %>%
filter(!(variable == "support" | vartag %in% c("Accuracy", "Macro Avg", "Weighted Avg")))
ggplot(sgd_long_dev, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "SGD_dev - Precision, Recall, and F1-Score for Classes 0 and 1")
ggplot(rnn_long_dev, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "RNN_dev - Precision, Recall, and F1-Score for Classes 0 and 1")
ggplot(sgd_long_test, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "SGD_test - Precision, Recall, and F1-Score
for Classes 0 and 1")
ggplot(sgd_long_test, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "SGD_test - Precision, Recall, and F1-Score
for Classes 0 and 1")
ggplot(rnn_long_test, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "RNN_test - Precision, Recall, and F1-Score
for Classes 0 and 1")
ggplot(sgd_long_dev, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "SGD_dev - Precision, Recall, and F1-Score
for Classes 0 and 1")
ggplot(rnn_long_dev, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "RNN_dev - Precision, Recall, and F1-Score
for Classes 0 and 1")
max_value <- max(max(sgd_long_dev$value), max(rnn_long_dev$value))
ggplot(sgd_long_dev, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "SGD_dev - Precision, Recall, and F1-Score
for Classes 0 and 1") +
coord_cartesian(ylim = c(0, max_value))
ggplot(rnn_long_dev, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "RNN_dev - Precision, Recall, and F1-Score
for Classes 0 and 1") +
coord_cartesian(ylim = c(0, max_value))
max_value <- max(max(sgd_long_test$value), max(rnn_long_test$value))
max_value <- max(max(sgd_long_test$value), max(rnn_long_test$value))
ggplot(sgd_long_test, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "SGD_test - Precision, Recall, and F1-Score
for Classes 0 and 1") +
coord_cartesian(ylim = c(0, max_value))
ggplot(rnn_long_test, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ vartag, ncol = 2) +
labs(title = "RNN_test - Precision, Recall, and F1-Score
for Classes 0 and 1") +
coord_cartesian(ylim = c(0, max_value))
sgd_roc <- read.csv("SGD_outputs/ROC.csv", header = TRUE)
rnn_roc <- read.csv("RNN_outputs/ROC.csv", header = TRUE)
# Plot the ROC curve
roc_rnn <- roc(rnn_roc$actual, rnn_roc$predicted)
plot(roc_rnn, main="RNN ROC Curve")
abline(a=0, b=1, lty=2, col="gray")
auc(roc_rnn)
sgd_top <- read.csv("SGD_outputs/top_bottom_words.csv", header = TRUE)
rnn_top <- read.csv("RNN_outputs/top_bottom_words.csv", header = TRUE)
ggplot(sgd_top, aes(x = reorder(word, weight), y = weight)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Words", y = "Weights", title = "SGD - Top and Bottom Words by Weight")
ggplot(rnn_top, aes(x = reorder(word, weight), y = weight)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Words", y = "Weights", title = "RNN - Top and Bottom Words by Weight")
sgd_weights <- read.csv("SGD_outputs/weights.csv", header = TRUE)
source("~/language_technology/statistics/project/human_vs_machine_generated_text/Project_Code.R")
